In computing, the X (X) window system known as X11 provides a graphical interface with windows for point displays. The system provides a toolkit and protocol for building the user interface on Unix and Unix-like systems, and almost all versions of modern operating systems support it. O provides the basic ergonomics for a GUI environment: drawing and moving windows on the screen, and interacting with a mouse and / or keyboard. X does not manage the user interface, programs with graphical interfaces do the job, so the display style of programs with graphical interfaces varies greatly; Different programs may appear in very different ways. System C works transparently across the network, as the device running the program may differ from the device that shows the graphic interface of this program, and the program that uses System C for display and interaction is called (client program) and System C that displays the program's interface is called a "presentation server", This causes some confusion for some users, as the presentation server is the local machine, while the client software can run on another machine. System C originated at MIT in 1984. The version of the protocol currently in use, X11, appeared in September 1987. The X Foundation leads. Org Project X is currently based on build version 7. 0 for version 11, providing it as free software under the MIT license and other licenses that provide free use of it. The graphic system X works as a standard or standard environment on many of the current Unix systems, including most versions of Linux and BSD, and it is also supported by the current operating system for Mac OS X devices, while there are versions of it intended to work under the Microsoft Windows environment. In 1984 Munir SURIB and Jim Gettys laid down the Early X Principles: The first principle changed during the design of X11 to read: "Do not add a new function unless you know there is a real program that will need it." S. has largely maintained these principles ever since. The reference applications were designed with an eye toward extension and optimization, while maintaining compatibility with the original 1987 protocol. X - intentionally - does not contain specifications for UI applications, such as buttons, menus, window title bars, etc. Instead, user software - such as window managers, GUI development tools, desktop environments, or user interfaces of specific programs - provides / knows all of these details. This is why the interface of "perfect" C has changed dramatically over time. The window manager controls the placement and appearance of application windows. This may have an interface similar to the one used in Windows or Mac (examples of this include Kwin in KDE or Metacity in GNOME) or have radically different controls (such as tiled window managers). The window manager can be very simple (like twm, the basic window manager that C provides) or provide features that come close to a full desktop environment (like Enlightenment). Lots of users are using X with a complete desktop environment, which includes a window manager, several applications, and a consistent interface. The two most popular desktop environments are GNOME and KEY. Dy. Which . The standard Unix desktop environment is the Common Desktop Environment (CDE). As for the freedesktop initiative. org is concerned with the compatibility between desktops and the components necessary for a competitive X desktop. The DS Reference application is the official application of the DS. Because of the freedom of the license, Many different free and commercial X images appeared. Many commercial Unix system producers have also taken the X reference application and customized it to work on their hardware, and usually they modify it significantly and add proprietary extensions. Until 2004, XFree86 provided the most popular X images on free Unix-like systems. XFree86 began as a port of LS to 386 compatible computers and by the end of the 1990s (1990) became the largest source of technical innovation in X and the primary place for its development. With the year 2004 it became the X application. Org reference, a split from XFree86, is mainstream. Although computer users often connect between C and UNIX, X servers are available for many other graphic environments. Hewlett-Packard's OpenVMS operating system includes a version of X with CDE known as DECwindows, as its standard desktop. Mac OS X 10 is also included. 3 and onwards from Apple on the X11. app based on XFree86 4. 3 and X11R6. 6, which provides better integration with Mac OS X. There are also X servers for Mac systems 8 and 9 by other companies such as MacX. Although Microsoft Windows does not come with support for SS. However, there are many third-party applications available, either free software such as Cygwin / X, Xming, WeirdMind and WeirdX; Or proprietary products like Xmanager, X - Deep / 32, WiredX, Exceed, X - Win32, usually used to control X clients remotely. When X runs under another window system (such as Microsoft Windows or Mac OS), System X runs "without root," which means that the host window environment takes care of the root window (the background and its related menus) and manages the dimensions of the hosted X windows - despite Some servers (Exceed for example) can create a root window for the remote client and display it as an independent window on the host system. The X terminal is a dedicated piece of hardware on which the X server acts as a thin client. This architecture was popularly used to build inexpensive terminal clusters to allow multiple users to use the same mega-server simultaneously, this use very close to the original purpose of the MIT project. The X terminals can explore the local network using the control protocol in the X View Manager to create a list of available host systems on which the client can operate. This needs to run the x view manager on the initial host - that's where the x server is running. Dedicated (hardware) X terminals are becoming less and less popular, as a PC with an X server typically provides the same functionality at a lower cost. The Unix Haters handbook devotes an entire chapter to the Windows X disaster, devoted to the X problems of the late 1980s and early 1990s. "Why Is X Not Our Perfect Window System" by Gajewska, Manasse and McCormack describes in detail the protocol's problems with recommendations for improvement. The high performance of modern graphics cards hinges on the most advanced graphics functions. Manufacturers typically implement these functions in proprietary drivers, usually providing them to Windows first (the market with the most customers). XFree86 and X. Org Server can reverse programming many older card drivers. Also, most modern display card manufacturers refuse to disclose the software details of their cards and consider them to be either highly confidential or patentable. Many of the current X servers handle the hardware directly, so a misbehaving X server can cause the display to stop responding, even if the operating system continues to function properly, which may need a restart. X does not intentionally imply user interface specifications or most forms of communication between applications. This results in many completely different interfaces, and applications that do not work well together. ICCCM - a specification to facilitate interactions between client programs - has a bad reputation for being difficult to implement properly. This has frustrated both users and programmers for a long time. Now, graphics programmers harmonize the look and feel of the program by writing it for a specific desktop environment or using a specific graphical widget, avoiding dealing with the ICCCM directly. Protocol C does not provide any means of handling audio, leaving this to the operating system to provide audio hardware support and audio playback. As users become more interested in sound, Several sound systems were not compatible with each other. Most of the programmers in the past chose to ignore network issues, and use the local and system-specific audio programming interfaces. The first generation of server audio systems included - rplay client and network audio system. More recent efforts have led to EsounD (GNOME) and ARts (KDE). Development has started in another media application server system. It is not currently possible to disconnect an LS client or session from one server and reconnect it to another server, as in Virtual Network Computing (VNC). Work has begun to add this method to C, and there are solutions to circumvent this (VNC: 0 viewers) to make the current X server screen available via VNC. By default, there is no encryption for the data transmission between the X server and the remote X client. An attacker using a packet sniffer could interpret and read it. Most users encounter this by passing X through the SSH tunnel; Most of the apps support passing X apps through tunnels, although this is sometimes not enabled by default. Autonomy - Hardware and separation between server and client leads to overload. Network transparency in Q requires that the server and client operate separately. In the early days, this resulted in a clear performance penalty compared to current versions of Microsoft Windows, Mac OS X, and Windows XP. S, which is deeply embedded in the operating system window. Supporters of S. would advise 4 to 8 CE. B from RAM for reasonable performance. Until the mid-1990s this looked a lot compared to Windows or Mac. It is found in current versions of Windows, Quartz for Mac or. S. Xe is an internal sub-system split similar to a server / client split in C with an approach to performance and resource use in C with KDE or GNOME. Almost all Unix-S like graphics use systems. Despite this, some have attempted to write alternatives to S. Historical alternatives include NeWS from Sun Microsystems, NeXT's PostScript demo that later became Apple's quartz watch for its Mac OS X. S. Exe. Recent attempts to treat and replace criticisms of X include Fresco and the Y window system. However, those interested in this issue doubt the effectiveness of any alternative that does not maintain X-compatibility. Other competitors have tried to beat the overload in X by directly handling the gear. These projects include DirectFB and FBUI applet. The DRI, which aims to provide an efficient, kernel-level interface for the framebuffer that may overwhelm other projects. Several dot matrix display systems appeared before the X system, from Xerox the Xerox Alto (1973) and Xerox Star (1981). Apple also featured the Apple Lisa (1983) and Apple Star (1984) systems. As for the UNIX world, it has seen systems like the Andrew Project (1982) and Rob Pike's plate terminal. The name X is derived on the basis that it is a successor to the pre-1983 window system called W Window System (and since X is directly next to W in the Latin alphabet it is called X). The W windows system was running under OS V (System V). h W used a network protocol that supports terminal and graphical windows, where the server maintains the display list. The basic idea of ??System X emerged at the MIT in 1984 as a collaboration between Jim Gettys of the Athena Project and Bob Sheffler of M. Lab. Which . T Computer Science. Scheffler needed a usable display environment to do debugging for the Argus system. At the same time, the Athena Project (a joint venture between the Digital Equipment Organization (DEC), MIT and IBM to secure easy access to computing resources for all students) also needed a separate graphics system - the platform to link its variegated systems together. Other. The window system was under development at the time, the Andrew project at Carnegie Mellon University, but it did not offer licenses for sale and there were no alternatives either. The project solved the issue by creating a protocol that could run both local applications and could invoke remote resources as well. In the middle of 1983 he ran a prototype W system on Unix at a speed of about one-fifth of his speed on a V system. In May 1984, Scheffler replaced the synchronous protocol for System W with an asynchronous protocol and the display menu with an existing graphical style to release System X version 1. X was the first window system to provide true hardware independence and independence from any vendor / developer. Sheffler and Gettys worked with Ron Newman on X which started to advance quickly. By January 1985 version 6 was launched, at which time DEC decided to launch the first Ultrix workstations with the X window system. D. Which . The C-Transfer X6 works with the QVSS projector on MicroVAX devices. In the second quarter of 1985 X required color support to run on DEC VAXstation - II / GPX workstations, and with this we had version 9. And with that im. Which . T had licensed the X6 to several groups outside the United States for a fee. At that time, it decided to release the X9 and future versions under what is called an M license. Which . T. The X9 came to light in September 1985. Later on, a group from Brown University transferred version 9 to iPhones. B. RT / PC, but the problem with reading unaligned data on RT forced them to make an incompatible protocol, leading to version 10 in late 1985. In 1996, outside organizations ordered X. The X10R3 was launched in February 1986. The X10R3 was the first version to be widely used, with the launch of the D. Which . C and Hewlett-Packard X-based products. Other companies have moved the X10 to the Apollo and Sun workstations, and even i-computers. B. M PC / AT. At this time the first commercial X-based applications were shown at the Autofact trade fair. The last version of the X10 was the X10R4, and it appeared in December 1986. With the organization X. Org and freedesktop. org, the mainline of the X Evolution is rapidly progressing again. Developers intend to release current and future releases as complete, usable products, not as a basis for others to build their products. On December 21, 2005, X released. Org version X11R6. 9, The source tree as one block for traditional X users, and X11R7. 0, same source code but divided into separate units each unit developed as a standalone project. The organization released X11R7. 1 on May 22, 2006 four months after the X11R7. 0 has many big improvements. For a better combination of operating systems and gear, X. Org to access video hardware only via OpenGL and DRI. DRI made its debut in version 4. 0 from XFree86 and then standard with X11R6. 7 and beyond. Many operating systems have begun adding kernel support to handle hardware, and this work is progressing increasingly.