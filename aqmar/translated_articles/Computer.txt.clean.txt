A computer is a machine that deals with data according to a set of instructions - programs -. There are many types of computers in terms of their way of working, their size, in addition to their speed. The earliest electronic computers were the size of a large room and consumed similar power to that of a few hundred personal computers today. Today it is possible to build computers inside a wristwatch that takes its energy from the watch's battery. Society looks at the personal computer - and its mobile counterpart; Laptop computer - symbolic of the information age; They are what most people think of when they talk about computers. Despite this, the most commonly used form of computer today is the embedded computer. Embedded computers are small and simple devices that are often used to control other devices. For example, you can find them in machines ranging from combat aircraft, robots, digital cameras and toys. It cannot be said that the computer is an invention in and of itself because it was the product of many scientific innovations and mathematical applications. Computers are diverse, in fact they are universal data-processing machines. According to the Church – Turing assumption, a computer with a certain minimum capacity is simply capable of carrying out the tasks of any other computer, from a personal digital assistant to a supercomputer, as long as time and memory capacity are not considered. Therefore, symmetric computer designs can be tuned for tasks ranging from processing corporate employee accounts to controlling unmanned spacecraft. Due to technological development, modern computers are algebraically more powerful than those of previous generations (a phenomenon described and partly explained by Moore's Law). Examples of early arithmetic devices that represent the early ancestors of a computer are the abacus (a tool now used to teach children to count) and the Antikythera mechanism, an ancient Greek device used to calculate the motions of the planets, dating from 87 BC. M . Approximately . The end of the Middle Ages witnessed European activity in mathematics and engineering, and Wilhelm Schickard was the first of a number of European scientists to create a mechanical calculator. The abacus (abacus) was noted as a primitive computer because it looked like a calculator in the past. In 1801 Joseph Marie Jacquard improved upon existing loom shapes that used a series of punched paper cards as a program for weaving intricate shapes. The result was that the Jacquard loom was not considered a real computer but was an important step in the development of modern digital computers. Charles Babbage was the first to think and design a fully programmed computer at the beginning of the year 1820, but due to a set of technical limitations at that time and financial limitations, as well as the inability to solve the problem of repair that was not good in its design, the device was not actually built in his life. A number of technologies appeared that later proved useful in computing, such as the punch card and valve tube at the end of the nineteenth century, and the automatic processing of large-scale data using punch cards manufactured using spreadsheets and designed by Hermann Hollerith. The success of powerful and comfortable computers began in the 1930s. And the forties of the twentieth century, and gradually added - the main features of modern computers such as the use of digital electronics (most of which were invented by Claude Shannon in 1937) and the ability to program more smoothly. Defining one point along the way as "the first digital electronic computer" is very difficult. A key achievement was the Atanasoff - Berry 1937 computer, a dedicated purpose machine that used valve-driven computing (valve tube), binary numbers, and regenerative memory. The secret British Colossus computer (1944), which had limited programming ability, but presented a device using thousands of valves that could be reliable and reprogrammed electronically. Harvard Mark I 1944 is a highly scalable electromechanical computer with limited programming ability. The American computer based on the decimal numbering system (ENIAC 1946) was the first general purpose electronic computer, but basically its structure was not smooth, which means that its basic reprogramming requires reconnection. Konrad Zuse's Z machines, together with the electromechanical Z3 (1941) being the first working machine to offer the feature of automatic binary digit calculation and the ability to program in a practical and convenient way. The team that developed ENIAC realized the flaws of its device and came up with a more flexible and elegant design that became known as the Von Neumann architecture (or "stored program architecture"). Stored program architecture became by default the basis of all modern computers . A number of projects began to develop a computer based on the stored program architecture in the mid to late 1940's. The first of these was completed in Britain. The first of these that is considered better and operational was what is known as the Small - Scale Experimental Machine, but EDSAC was perhaps the first practical version developed. LED tube-driven computer designs became in use during the 1950s, but over time they were replaced by transistor computers as they are smaller, faster, cheaper, and more reliable, all of which allowed them to be commercially produced in the 1960s. Twenty. In the seventies of the twentieth century, the choice of integrated circuit technology helped in the production of computers at a low cost enough to allow individuals to own a personal computer of the currently known types ... While the technologies used in computers have changed dramatically since the emergence of the early electronic multipurpose computers of the 1940's, what Most of them still use the stored program architecture (sometimes called the von Neumann architecture). The design was able to partially make the universal computer real. The architecture describes a computer with four main sections: the Algorathim and Logic Unit (ALU), the control circuit, the memory, and the input and output devices (expressed by the term Input / Output I / O). These parts are connected to each other by means of bundles of wires (called "buses" when the same beam supports more than one data path) and are usually accompanied by a timer or clock (although other events can lead the control circuit). Intellectually, a computer memory can be viewed as a list of cells. Each cell has a numbered address and the cell can store a fixed and small amount of information. This information can be either an instruction (command) that tells the computer what it should do, or it can be data, which is information that the computer processes using commands that have been placed on the memory. Generally, any cell can be used to store either orders or data. The unit of arithmetic and logic is in many senses the heart of a computer. It is able to perform two types of basic operations. The first is the calculations, collection or subtract two numbers together . The set of arithmetic operations may be very limited, in fact, some designs do not support multiplication and division operations in a direct way (instead of direct support, users can support multiplication and division operations through programs that perform multiple processors for addition and subtraction and other numbers) . The second section of the operations of the arithmetic and logic unit is the comparison operations: by entering two numbers, this unit checks whether or not the two numbers are equal and determines which of the two numbers is the largest. I / O systems are the means by which a computer receives information from the outside world and outputs results to the world. In a typical personal computer, input devices include components such as a keyboard and mouse, and output devices include screens, printers, and the like, but it is possible to connect a huge variety of devices to a computer and act as input and output devices. The operating system brings it all together. Its function is to read the commands and data from the memory or from the input and output devices, as well as decode the commands, the arithmetic and logic unit feeds the correct inputs according to the commands, informs the arithmetic and logic unit the operation to be performed on those inputs and sends the results back to the memory or To input and output devices. The counter is considered one of the main components in the control system, which follows the address of the current command. Usually the address value increases every time the command is executed unless the same command indicates that the next command must be in another address (this allows the computer to execute the same commands Iterative way). Beginning in the 1980s, the computation and logic unit and the control unit (collectively called the central processing unit) (CPU) were usually contained in a single integrated circuit called a microprocessor. Basically, how any computer works is pretty straightforward. Usually, in each time cycle the computer fetches commands and data from its memory. Orders are executed, results are stored, and then the next command is fetched. This procedure is repeated until the stop order is met. The commands that the control unit interprets and the arithmetic and logic unit executes are limited in number, precisely defined and are very simple operations. In general, they fall into one or more of four sections: Commands are represented like data in binary code (a counting system whose base number is 2). For example, the code for some kind of "copy" operation on an Intel x86 microprocessor is 10110000. The partial command is set so that a particular computer supports what is known as machine language. Using a previously simplified machine language has made it much easier to run existing programs on a new machine: thus in markets where the availability of commercial software is necessary, providers will agree on one or a very small number of the prominent machine languages. The larger computers (such as the server) differ from the previous types in an important matter which is that instead of having one central processing unit, there is often more than one. Often these computers have highly unusual structures that are noticeably different from the underlying stored program architecture and sometimes contain thousands of CPUs, but such designs become useful only for specialized purposes. I / O (short for Input / Output) is a general term for devices that send information from the outside world and those that return computation results. These results can either be directly visible to the user or be sent to another machine that has a dedicated computer control. For example, in a robot, the main output device for computer control is the robot itself. The first generation of computers was equipped with a very limited range of input devices. The punch card reader or the like was used to enter commands and data into the computer memory, and also used some types of printers, which is usually a modified teletype to record results. Over the years, other devices have been added . For personal computers, for example, the keyboard and mouse are the two main methods used to enter information directly into the computer, and the screen is the main way to display information to the user, although printers and speakers are also common. There is a huge variety of other input devices for inserting other types of inputs. An example of this is the digital camera where it is used to enter visual information. There are two main types of input and output devices. The first type is secondary storage devices such as hard disks, CD-ROM units, key drives and the like, which are relatively slow but have high storage capacities, where information can be stored for later retrieval: The second type are devices Used to connect to computer networks. The ability to transfer data between computers opened up a wide range of capabilities for the computer. The global Internet allows millions of computers to transfer information of all kinds between them and each other. Computer programs are simply a list of commands that a computer executes. These commands (instructions) range from a few commands that perform a simple task to a more complex list of commands that may contain tables of data. Many computer programs contain millions of commands, and many of these commands are executed repeatedly. A typical modern personal computer can execute about 3 billion commands per second. Computers have not acquired their extraordinary capabilities through their ability to execute complex commands. Rather, it does millions of commands arranged by people known as programmers. Usually, programmers do not write commands directly to a computer in machine language. Programming in this language is a very tedious, difficult and error-prone process, which makes programmers unable to mass-produce. Instead, programmers describe the desired process in a "high-level" programming language such as the Pascal language or the C language, or languages ??for Internet applications such as java, which are then automatically translated into machine language by means of dedicated computer programs (interpreters). And banks) called in English as a compiler. Some programming languages ??draw a map very close to machine language, such as Assembly (low-level programming languages): On the other hand, programming languages ??such as Prolog are based on abstract rules and are separated from the details of the actual operation of the machine (high-level programming languages). The language chosen for a partial task depends on the nature of that task, the skill that programmers possess, the availability of tools, and typically consumer needs (for example, projects for US military use often have to be programmed in Ada). Computer software (intangible parts of a computer) is an alternative term for computer programs: it is a more comprehensive term and contains all the important materials accompanying the program that it needs to perform important tasks. For example, the video game does not contain only the program itself, but It also contains data representing the images, sounds, and other materials required to create the virtual environment for the game. A computer application is a piece of computer software that is offered to many users, often in a retail market. A fully implemented recent example is the office suite, which is software with common features for performing common office tasks. Going from the very simple capabilities of a single machine language command to the enormous capabilities of application programs means that many computer programs are very large and very complex. Examples include: Windows XP, which consists of about 40 million lines of computer code in the C ++ programming language: there are many projects that are the largest target, created by large teams of programmers. The management of these highly complex projects is the key to the possibility of implementing these projects: programming languages ??and programming applications allow the task to be divided into smaller and smaller sub-tasks until it becomes in the capabilities of a single programmer and at a convenient time. The software development process is still slow, unpredictable, and error-prone: the software engineering system has attempted and has partially succeeded in making the process faster and more productive and improving the quality of the final product. Soon after the development of the computer, it was discovered that there are certain tasks that are required in different programs; An old example of this was the computation of some basic mathematical functions. For the sake of efficiency, model copies of these functions have been collected and placed in libraries that are available to those who need them. The group of tasks is somewhat common and related to processing data blocks for "talking" to various input and output devices, and therefore libraries for them were quickly developed. By the end of the sixties of the twentieth century, with the widespread industrial use of the computer for many purposes, it became popular to use it to accomplish many functions in institutions. Shortly thereafter, it became possible to have special programs for timing and carrying out these many tasks. The combination of "hardware" management and task timing has become known as the operating system; An old example of this type of legacy operating system was IBM's OS / 360. The next major development in operating systems was timesharing - its idea that a number of users can use the machine simultaneously by keeping all their programs in memory and executing each user's program for a short period of time thus becoming as if every user owns them all. Its own computer. Such improvement requires the operating system to provide all users' programs with a "virtual machine" in order to prevent a single user program from interfering with other programs (by chance or by design). The range of hardware that operating systems have to deal with has expanded; A notable example is the hard disk; The idea of ??individual files and the structured arrangement of "directories" (now often called "folder" folders) greatly facilitate the use of these devices for permanent storage. A fully implemented recent example is the office suite, which is software with common features for performing common office tasks. Secure access controls, which allowed computer users to only access files, directories, and programs for which they were authorized to use, were also common. Perhaps the last addition to the operating system were tools that provide the user with a standard graphical user interface. While there were some technical reasons for the need to link the Graphic User Interface (GUI) with the rest of the operating system, this allowed the operating system vendor to make all programs destined for his operating system have the same interface. Outside of these "core" internal tasks, the operating system is often equipped with a set of other tools, some of which may have little connection to these original internal tasks but have been found to be useful to a sufficient number of consumers to make producers their guests, for example Mac OS X. SX is provided with an application for digital video editing. Smaller computer operating systems may not provide all of these tasks. Operating systems for the old microcomputer with limited memory and processing capabilities did not provide all the tasks, and compact computers always either had specialized operating systems or did not have an operating system altogether, with its specialized application programs that performed tasks that could otherwise be traced back to the operating system. . See the sub-article, Types of Computers. Computers can be divided into: and compact computers or what is called the microcontroller, which is a microcontroler so it is called in English because several computer parts are placed in one electronic chip, which is the chip that programs however you want. Programming it is one of the most important pieces used, which is the famous pic16f84 from the global microship company, and there are better copies of this chip. You can make thousands of applications by programming this chip, that is, you walk it according to what you want to run. Lee called "computer" at the person who enters the data into the computer, but later the word "computer" was used. This word is used by the word computer. Computer components refer to hardware or hardware only. It can be said that any computer system contains the following parts in its various forms: And there are other components that are complementary to the work of the computer, such as: In addition to the solid components, the computer needs: